// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESS_URI")
}

model Trabajador {
  id               Int          @id @default(autoincrement())
  idApp            String?      @unique
  nombreApellidos  String
  displayName      String?
  emails           String
  dni              String       @unique
  direccion        String?
  ciudad           String?
  telefonos        String?
  fechaNacimiento  DateTime?
  nacionalidad     String?
  nSeguridadSocial String?
  codigoPostal     String?
  cuentaCorriente  String?
  tipoTrabajador   String
  idResponsable    Int?
  idTienda         Int?
  tienda           Tienda?      @relation(fields: [idTienda], references: [id])
  llevaEquipo      Boolean
  tokenQR          String?
  displayFoto      String?
  contratos        Contrato2[]
  // Autorelaci√≥n
  responsable      Trabajador?  @relation("Responsable", fields: [idResponsable], references: [id], onDelete: SetNull)
  subordinados     Trabajador[] @relation("Responsable")
  roles            Role[]
  permisos         Permiso[]
  excedencia       Boolean      @default(false)
}

model Tienda {
  id           Int          @id @default(autoincrement())
  nombre       String
  direccion    String?
  idExterno    Int?
  trabajadores Trabajador[]
}

model Equipo {
  id        Int    @id @default(autoincrement())
  nombre    String
  idExterno Int?
}

model Empresa {
  id        String     @id @default(uuid())
  nombre    String
  cif       String
  idExterno Int?
  contratos Contrato2[]
}

model Contrato {
  id              Int         @id @default(autoincrement())
  horasContrato   Float
  inicioContrato  DateTime
  finalContrato   DateTime?
  fechaAlta       DateTime
  fechaAntiguedad DateTime
  fechaBaja       DateTime?
  // trabajador      Trabajador @relation(fields: [idTrabajador], references: [id])
  idTrabajador    Int
  dni             String
  idEmpresa       String?
  // empresa         Empresa?    @relation(fields: [idEmpresa], references: [id])
}

model Contrato2 {
  id              String      @id @default(uuid())
  horasContrato   Float
  inicioContrato  DateTime
  finalContrato   DateTime?
  fechaAlta       DateTime
  fechaAntiguedad DateTime
  fechaBaja       DateTime?
  idEmpresa       String?
  idTrabajador    Int
  Empresa         Empresa?   @relation(fields: [idEmpresa], references: [id])
  Trabajador      Trabajador @relation(fields: [idTrabajador], references: [id])
}

model Role {
  id          String       @id @default(uuid())
  name        String
  permissions Permiso[]
  users       Trabajador[]
}

model Permiso {
  id    String       @id @default(uuid())
  name  String
  roles Role[]
  users Trabajador[]
}
